buildscript {
    apply from: '../../libs/kotlin/dep/latest/base.gradle.kts'
    apply from: '../../libs/kotlin/dep/latest/libs.gradle.kts'
    apply from: '../../libs/kotlin/dep/latest/ui.gradle.kts'

    repositories {
        mavenCentral()
        maven {
            url = "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion" as Object
        classpath "org.openjfx:javafx-plugin:$javafxPlugin"
//        classpath("gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:${rootProject.extra.get("spotbugsPluginVersion")}")
    }
}

repositories {
    mavenCentral()
}

allprojects {
    apply plugin:'java'
    apply plugin:'kotlin'

    apply plugin: "org.openjfx.javafxplugin"
    javafx {
        version = "13"
        modules = [ 'javafx.controls' ]
    }

    repositories {
        // this repo should be available in every subproject that uses kotlin
        mavenCentral() // or jcenter
    }

    dependencies {
        testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
        /* uncomment for cross-platform jar: */
//    runtimeOnly "org.openjfx:javafx-graphics:$javafx.version:win"
//    runtimeOnly "org.openjfx:javafx-graphics:$javafx.version:linux"
//    runtimeOnly "org.openjfx:javafx-graphics:$javafx.version:mac"
    }

    test {
        useJUnitPlatform()
        testLogging {
            // Make sure output from
            // standard out or error is shown
            // in Gradle output.
            showStandardStreams = true

            // Or we use events method:
            // events 'standard_out', 'standard_error'

            // Or set property events:
            // events = ['standard_out', 'standard_error']

            // Instead of string values we can
            // use enum values:
            // events org.gradle.api.tasks.testing.logging.TestLogEvent.STANDARD_OUT,
            //        org.gradle.api.tasks.testing.logging.TestLogEvent.STANDARD_ERROR,
        }
    }
}

wrapper {
    gradleVersion = project.ext.gradleVersion
}