buildscript {
    apply from: '../../libs/kotlin/dep/latest/base.gradle.kts'
    apply from: '../../libs/kotlin/dep/latest/libs.gradle.kts'
    apply from: '../../libs/kotlin/dep/latest/ui.gradle.kts'

    repositories {
        mavenCentral()
        maven {
            url = "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion" as Object
        classpath "org.openjfx:javafx-plugin:0.0.8"
    }
}

repositories {
    mavenCentral()
}

allprojects {
    apply plugin:'java'
    apply plugin:'kotlin'

    apply plugin: "org.openjfx.javafxplugin"
    javafx {
        version = "13"
        modules = [ 'javafx.controls' ]
    }

    repositories {
        // this repo should be available in every subproject that uses kotlin
        mavenCentral() // or jcentrer
    }

    dependencies {
        /* uncomment for cross-platform jar: */
//    runtimeOnly "org.openjfx:javafx-graphics:$javafx.version:win"
//    runtimeOnly "org.openjfx:javafx-graphics:$javafx.version:linux"
//    runtimeOnly "org.openjfx:javafx-graphics:$javafx.version:mac"
    }
}

//buildscript {
//    dependencies {
//        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${rootProject.extra.get("kotlinVersion")}")
//        classpath("gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:${rootProject.extra.get("spotbugsPluginVersion")}")
//    }
//}

//allprojects {
//    dependencies {
//        compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${rootProject.extra.get("kotlinVersion")}")
//        testImplementation("org.junit.jupiter:junit-jupiter-api:${rootProject.extra.get("junitVersion")}")
//    }

//    tasks.withType<KotlinCompile> {
//        kotlinOptions.jvmTarget = "1.8"
//        setDestinationDir(File("$projectDir/build", "classes/java/main"))
//    }
//}

//subprojects {
//    apply {
//        plugin("java-library")
//        plugin("org.openjfx.javafxplugin")
//    }
//
////    configure<JavaFXOptions> {
////        version = rootProject.extra.get("javafxVersion") as String
////        modules("javafx.controls")
////    }
//
//
////    apply plugin: 'com.github.spotbugs'
////    spotbugs {
////        reportsDir = file("$project.buildDir/reports/findbugs")
////        reportLevel = "high"
////        ignoreFailures = true
////    }
//
//}

//tasks.withType<Wrapper> {
//    gradleVersion = rootProject.extra.get("gradleVersion") as String
//}