buildscript {
    ext {
        gradleNodeVersion = '1.3.0'
    }

    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "com.github.node-gradle:gradle-node-plugin:$gradleNodeVersion"
    }
}



//------------------------------------------------------------------------------------------------------------------------
//    Plugins - Application
//------------------------------------------------------------------------------------------------------------------------

apply plugin: 'com.github.node-gradle.node'

//------------------------------------------------------------------------------------------------------------------------
//    Plugin configuration
//------------------------------------------------------------------------------------------------------------------------

node {
    version = '10.14.1'
    npmVersion = '6.8.0'
    download = true
    workDir = file("${rootDir}/Website/WebsiteFrontendLegacy/node")
    nodeModulesDir = file("${rootDir}/Website/WebsiteFrontendLegacy")
}



//------------------------------------------------------------------------------------------------------------------------
//    Tasks - NPM
//------------------------------------------------------------------------------------------------------------------------

task cleanFrontend(type: Delete) {
    group 'build client'
    delete "${rootDir}/Website/WebsiteFrontendLegacy/dist", "${rootDir}/Website/WebsiteBackend/src/main/resources/static"
}

task cleanNpm(type: Delete) {
    group 'build client'
    dependsOn 'clean'
    delete "${rootDir}/Website/WebsiteFrontendLegacy/node", "${rootDir}/Website/WebsiteFrontendLegacy/node_modules"
}

task npmUpdate {
    group 'build client'
    dependsOn 'npm_update'
}

//------------------------------------------------------------------------------------------------------------------------
//    Tasks - Standalone client
//------------------------------------------------------------------------------------------------------------------------

task buildStandaloneClient(type: NpmTask, dependsOn: npmInstall) {
    group 'build client'
    description = 'Compile client side folder for development'
    args = ['run', 'buildStandalone']
}

task serveStandaloneClientWatch(type: NpmTask, dependsOn: npmInstall) {
    group 'build client'
    description = "Builds, serves and watches the client side assets for rebuilding"
    args = ['run', 'serveStandaloneWatch']
}

task serveStandaloneClient(type: NpmTask, dependsOn: npmInstall) {
    group 'build client'
    description = "Compile client side folder for production"
    args = ['start']
}

task bootStandaloneClient(type: GradleBuild) {
    group 'application'
    setTasks(['clean', 'buildStandaloneClient', 'serveStandaloneClient'])
//    finalizedBy 'npm_shutdown'
}

task bootStandaloneClientWatch(type: GradleBuild) {
    group 'application'
    setTasks(['clean', 'serveStandaloneClientWatch'])
//    finalizedBy 'npm_shutdown'
}

//------------------------------------------------------------------------------------------------------------------------
//    Tasks - Full Application
//------------------------------------------------------------------------------------------------------------------------

task bootFullApplication(type: GradleBuild) {
    group 'application'
    setTasks([':WebsiteFrontendLegacy:npmUpdate', ':WebsiteFrontendLegacy:clean', ':WebsiteFrontendLegacy:buildClientToSpring', ':WebsiteBackend:bootRun'])
}

//------------------------------------------------------------------------------------------------------------------------
//    Tasks - Integrated client
//------------------------------------------------------------------------------------------------------------------------

task buildClientToSpring(type: NpmTask, dependsOn: npmInstall) {
    group 'build client'
    description = 'Compile client side folder for development'
    args = ['run', 'buildToSpring']
}
