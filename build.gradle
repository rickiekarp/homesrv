//import com.github.spotbugs.SpotBugsTask

buildscript {
    apply from: 'module-base/base.gradle.kts'
    apply from: 'module-base/libs.gradle.kts'
    apply from: 'module-base/logging.gradle.kts'

    repositories {
        mavenCentral()
        maven {
            url = "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion" as Object
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokkaVersion" as Object
//        classpath "gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:1.6.1"
    }
}

group = 'net.rickiekarp.backend'
version = '1.0.0'

allprojects {
    apply plugin: "java"
    apply plugin: "org.jetbrains.kotlin.jvm"
    apply plugin: 'org.jetbrains.dokka'

    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    repositories {
        mavenCentral()
    }
}

subprojects {
    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion" as Object
        compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion" as Object
        testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion" as Object
        testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junitVersion
        testCompile "org.mockito:mockito-core:2.1.0"
    }

    sourceSets {
        main.kotlin.srcDirs += 'src/main/kotlin'
        main.java.srcDirs += 'src/main/kotlin'
    }

//    project.apply plugin: "com.github.spotbugs"
//    project.spotbugs {
//        it.sourceSets = [sourceSets.main]
//        ignoreFailures = true
//        toolVersion = '3.1.3'
//        effort = 'max'
//        reportLevel = "high"
//        reportsDir = file("$project.rootDir.absolutePath/Reports/spotbugs/$project.name")
//    }
//
//    // filter out any class that does not live in the rkarp package
//    project.tasks.withType(SpotBugsTask) {
//        description = 'Run spotbugs'
//        group = 'verification'
//
//        dependsOn 'classes'
//        classes = fileTree('build/classes/')
//
//        doFirst {
//            classes = classes.filter {
//                it.path.contains('/com/rkarp/')
//            }
//            pluginClasspath = project.configurations.spotbugsPlugins
//        }
//    }

    dokka {
        outputFormat = 'html'
        outputDirectory = "$it.project.buildDir/dokka"
    }
}

wrapper {
    gradleVersion = project.ext.gradleVersion
}
